# Алгоритм PAM
Рассмотрена и реализована усовершенствованная версия одного из распространенных алгоритмов кластеризации графов – PAM (Partitioning Around Medoids). 
Разбиение на кластеры зависит от входных данных, в отличие от базового метода, где количество кластеров считается изначально известным.

## Формат входных и выходных данных
Входные данные будут содержаться в файле in.txt, выходные – в out.txt.

### Формат входных данных:
В первой строке записано число k_max (int) – верхняя граница кластеризации.
Затем в формате json сам граф в виде списков смежности  
  
Пример:  
```
5                                       |    [graph_1](https://github.com/Prudkovskiy/k-medoids/blob/master/img/graph_1.jpg)
[                                       |
    {"1": {"2": 4, "3": 14, "5": 3}},   |
    {"2": {"1": 4, "3": 11, "4": 9}},   |
    {"3": {"1": 14, "2": 11}},          |
    {"4": {"2": 9}},                    |
    {"5": {"1": 3}}                     |
]                                       |
```

### Формат выходных данных:
Кластеры списками смежностей в формате json (k-шт.)  
```
{"1":[1,2,5],"2":[3],"3":[4]}           |    [graph_2](https://github.com/Prudkovskiy/k-medoids/blob/master/img/graph_2.jpg)
```

Примеры смотреть в test_data

## Инструкция пользования
Для адекватной работы программы необходима версия языка Go 1.8 и старше,  
иначе возникает ошибка, связанная с отсутствием sort.Slice в предыдущих версиях (рекомендуется установить последнюю).  
Посмотреть версию – команда: `go version`  

Для того чтобы собрать проект, пишем:  
`go build main.go pam.go floyd_warshall.go init.go`  
(порядок модулей не важен)  

Далее программа готова к использованию. Пишем:  
`«executable_file» «inputFileName» «outputFileName»`  
Для запуска тестов в одной папке с test_coverage.go выполнить команду:  
`go test –v`
